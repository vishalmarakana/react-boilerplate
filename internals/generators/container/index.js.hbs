/*
 *
 * {{properCase name }}
 *
 */

import React from 'react'
import { connect } from 'react-redux'
import { createStructuredSelector } from 'reselect'

// import { selectUsername } from './selectors'
// import { selectRepos, selectLoading, selectError } from 'containers/App/selectors'

import { bindActionCreators } from 'redux'
import { compose, withContext, getContext, withHandlers } from 'recompose'
import * as actions from './actions'

const {{properCase name }} = () => {
  return (
    <div>
      {{properCase name }}
    </div>
  )
}

{{properCase name }}.propTypes = {
}

const mapStateToProps = createStructuredSelector({
})

export default compose(
  connect(mapStateToProps, dispatch => ({
    actions: bindActionCreators(actions, dispatch),
  })),
  withContext({
    actions: React.PropTypes.object.isRequired,
  }, props => ({
    actions: props.actions,
  })),
  getContext({
    actions: React.PropTypes.object.isRequired,
  }),
  withHandlers({
  }),
)({{properCase name }})